# coding: utf-8

"""
    Visier User Management APIs

    Visier APIs for managing users within an organization

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from visier_user_management_python_sdk.pydantic.all_permissions_assigned_for_local_tenant_dto import AllPermissionsAssignedForLocalTenantDTO
from visier_user_management_python_sdk.pydantic.all_profile_assigned_for_local_tenant_dto import AllProfileAssignedForLocalTenantDTO
from visier_user_management_python_sdk.pydantic.all_user_groups_assigned_for_local_tenant_dto import AllUserGroupsAssignedForLocalTenantDTO
from visier_user_management_python_sdk.pydantic.last_login_dto import LastLoginDTO

class UserGetAPIResponseDTO(BaseModel):
    # The unique identifier associated with the user.
    user_id: typing.Optional[str] = Field(None, alias='userId')

    # The user's username. This is typically the user's email, such as john@jupiter.com.
    username: typing.Optional[str] = Field(None, alias='username')

    # An identifiable name to display within Visier. For example, \"John Smith\".
    display_name: typing.Optional[str] = Field(None, alias='displayName')

    # If applicable, and if available, the user employee ID in the data.
    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    # If false, the user account is disabled.
    account_enabled: typing.Optional[bool] = Field(None, alias='accountEnabled')

    # A list of objects representing the list of available profiles.
    profiles: typing.Optional[AllProfileAssignedForLocalTenantDTO] = Field(None, alias='profiles')

    # A list of objects representing the user's permissions.
    permissions: typing.Optional[AllPermissionsAssignedForLocalTenantDTO] = Field(None, alias='permissions')

    # A list of objects representing the available user groups.
    user_groups: typing.Optional[AllUserGroupsAssignedForLocalTenantDTO] = Field(None, alias='userGroups')

    # An object that represents the time that the user last logged into Visier.
    last_login: typing.Optional[LastLoginDTO] = Field(None, alias='lastLogin')

    # The user's email address.
    email: typing.Optional[str] = Field(None, alias='email')
    class Config:
        arbitrary_types_allowed = True
