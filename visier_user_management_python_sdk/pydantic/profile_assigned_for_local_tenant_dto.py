# coding: utf-8

"""
    Visier User Management APIs

    Visier APIs for managing users within an organization

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from visier_user_management_python_sdk.pydantic.additional_capabilities_dto import AdditionalCapabilitiesDTO
from visier_user_management_python_sdk.pydantic.capabilities_dto import CapabilitiesDTO

class ProfileAssignedForLocalTenantDTO(BaseModel):
    # The unique identifier associated with the profile.
    profile_id: typing.Optional[str] = Field(None, alias='profileId')

    # An identifiable profile name to display in Visier, such as \"Partner Service Manager\".
    display_name: typing.Optional[str] = Field(None, alias='displayName')

    # An inclusive date-time when this profile is active.
    validity_start_time: typing.Optional[str] = Field(None, alias='validityStartTime')

    # An exclusive date-time when this profile is no longer active.
    validity_end_time: typing.Optional[str] = Field(None, alias='validityEndTime')

    # A list of objects representing the access that this profile has for the capabilities of this profile.
    capabilities: typing.Optional[typing.List[CapabilitiesDTO]] = Field(None, alias='capabilities')

    # A list of the additional capabilities that are assigned to this profile.
    additional_capabilities: typing.Optional[AdditionalCapabilitiesDTO] = Field(None, alias='additionalCapabilities')
    class Config:
        arbitrary_types_allowed = True
